---
to: '<%= `src/components/${locals.parent ? Parent : Name}/${Name}.tsx` %>'
---
import React from 'react'
import type { Node } from 'react'
import styles from './<%= locals.parent ? Parent : Name %>.scss'

type Props = {
  /**
   * If further customization is needed provide a custom class name,
   * it will be applied to the root of the component as the last class, 
   */
  className?: string,
  children: Node,
  color: 'primary' | 'secondary' | 'danger',
  disabled: boolean,
}

function <%= Name %>({ className, children, disabled }: Props) {
    const classes = [styles.wrapper, disabled? styles.disabled : '', className].join(' ').trim()
    return (
        <div className={classes}>
            {children}
        </div>
    )
}

<%= Name %>.defaultProps = {
    className: '',
    color: 'primary',
    disabled: false,
}

export default <%= Name  %>

<% if (locals.subComponent) { %>
type <%= `${locals.subComponentName}Props`%>  = {
  className?: string,
  children: Node,
}

export function <%= locals.subComponentName %>({ className, children }: <%= `${locals.subComponentName}Props` %>) {
    const classes = [styles.wrapper, className].join(' ').trim()
    return (
        <div className={classes}>
            {children}
        </div>
    )
}

<%= locals.subComponentName %>.defaultProps = {
    className: '',
}
<% } %>